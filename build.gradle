buildscript {
	ext {
		kotlinVersion = '1.1.4-3'
		springBootVersion = '1.5.7.RELEASE'
		springBootDomaVersion = '1.1.1'
		domaVersion = '2.17.0'
		postgresqlVersion = '42.1.4'
		domaGenVersion = '2.17.0'
	}
	repositories {
		jcenter()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'

group = 'com.maeharin'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	jcenter()
}

configurations {
	domaGenRuntime
}

// -------------------------------------------
// for Doma2 with gradle
// see: http://doma.readthedocs.io/ja/stable/build/#gradle
// -------------------------------------------
processResources.destinationDir = compileJava.destinationDir
compileJava.dependsOn processResources

dependencies {
	//compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	runtime('org.springframework.boot:spring-boot-devtools')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	//testCompile('org.springframework.security:spring-security-test')

	// -------------------------------------------
	// dababase
	// -------------------------------------------
	compile "org.postgresql:postgresql:${postgresqlVersion}"

	// -------------------------------------------
	// Doma2(ORM)
	// -------------------------------------------
	compile "org.seasar.doma.boot:doma-spring-boot-starter:${springBootDomaVersion}"
	compile "org.seasar.doma:doma:${domaVersion}"

	// -------------------------------------------
	// Doma2 gen
	// -------------------------------------------
	domaGenRuntime "org.seasar.doma:doma-gen:${domaGenVersion}"
	domaGenRuntime "org.postgresql:postgresql:${postgresqlVersion}"
}


//
// Doma-Gen
// DBのスキーマからDomaのEntity, Dao, SQLファイルを自動生成するタスク
// see: http://doma-gen.readthedocs.io/ja/stable/gen/
//
task domagen {
	doLast {
		def dbHost = System.getenv('DB_HOST')
		def dbName = System.getenv('DB_NAME')
		def dbUser = System.getenv('DB_USER')
		def dbPassword = System.getenv('DB_PASSWORD')
		def dbUrl = "jdbc:postgresql://${dbHost}/${dbName}"

		ant.taskdef(resource: 'domagentask.properties',
					classpath: configurations.domaGenRuntime.asPath)

		def packageName = "com.maeharin.kotlindvdrental.infrastructure.doma"

		ant.gen(
			url: dbUrl,
			user: dbUser,
			password: dbPassword,
		) {
			entityConfig(
				packageName: "${packageName}.entity",
				entitySuffix: "Entity",
				overwrite: true,
				namingType: "snake_upper_case",
				useAccessor: false,
				useListener: false,
				showColumnName: false,
				showDbComment: true
			)
			daoConfig(packageName: "${packageName}.dao")
			sqlConfig()
		}
	}
}

